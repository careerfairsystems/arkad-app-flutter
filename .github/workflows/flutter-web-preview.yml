name: Flutter Web Preview

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  FLUTTER_VERSION: "3.35.4"
  OPENAPI_GENERATOR_VERSION: "7.10.0"

jobs:
  generate-api:
    name: Generate API Client
    runs-on: ubuntu-latest
    outputs:
      api-hash: ${{ steps.api-hash.outputs.hash }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get API Spec Hash
        id: api-hash
        run: |
          API_HASH=$(curl -sf --max-time 30 --retry 2 --retry-delay 5 \
            "https://staging.backend.arkadtlth.se/api/openapi.json" | sha256sum | cut -d' ' -f1)
          echo "hash=$API_HASH" >> $GITHUB_OUTPUT
          echo "API spec hash: $API_HASH"

      - name: Cache Generated API Client
        id: api-cache
        uses: actions/cache@v4
        with:
          path: api/arkad_api/
          key: api-client-${{ steps.api-hash.outputs.hash }}

      - name: Install pnpm
        if: steps.api-cache.outputs.cache-hit != 'true'
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        if: steps.api-cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'pnpm'

      - name: Set up Flutter
        if: steps.api-cache.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Install OpenAPI Generator
        if: steps.api-cache.outputs.cache-hit != 'true'
        run: pnpm install -g @openapitools/openapi-generator-cli

      - name: Generate API Client
        if: steps.api-cache.outputs.cache-hit != 'true'
        run: |
          # Clean and generate
          rm -rf api/arkad_api
          mkdir -p api

          openapi-generator-cli generate \
            -i "https://staging.backend.arkadtlth.se/api/openapi.json" \
            -g dart-dio \
            -o api/arkad_api \
            --additional-properties=pubName=arkad_api,nullSafe=true

          # Complete generation
          cd api/arkad_api
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          cd ../..

  build-web:
    name: Build Flutter Web
    needs: generate-api
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Restore API Client Cache
        uses: actions/cache@v4
        with:
          path: api/arkad_api/
          key: api-client-${{ needs.generate-api.outputs.api-hash }}

      - name: Install dependencies
        run: flutter pub get

      - name: Enable web support
        run: flutter config --enable-web

      - name: Build web app
        run: flutter build web --release --web-renderer html

      - name: Upload web build artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-web-build
          path: build/web/
          retention-days: 7

  deploy-preview:
    name: Deploy Preview
    needs: [generate-api, build-web]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download web build artifact
        uses: actions/download-artifact@v4
        with:
          name: flutter-web-build
          path: build/web/

      - name: Deploy to GitHub Pages (PR Preview)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web/
          destination_dir: pr-${{ github.event.number }}
          keep_files: false

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;
            const previewUrl = `https://${repoOwner}.github.io/${repoName}/pr-${prNumber}/`;

            const comment = `## ðŸš€ Flutter Web Preview

            Your PR has been built and deployed! You can preview the changes here:

            **ðŸ”— [Preview Link](${previewUrl})**

            This preview will be updated automatically when you push new commits to this PR.

            ---
            *Preview deployed from commit: ${context.payload.pull_request.head.sha.substring(0, 7)}*`;

            // Check if we already commented on this PR
            const comments = await github.rest.issues.listComments({
              owner: repoOwner,
              repo: repoName,
              issue_number: prNumber,
            });

            const existingComment = comments.data.find(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('Flutter Web Preview')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: repoOwner,
                repo: repoName,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: repoOwner,
                repo: repoName,
                issue_number: prNumber,
                body: comment
              });
            }